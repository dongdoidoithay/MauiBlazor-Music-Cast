@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

@inject ILogger<MainLayout> _logger
<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>


<div class="page">
    <div class="page__header">
        <Header />
    </div>

    <div class="page__sidebar">
        <NavMenu />
    </div>

    <main>
        <article>
            @Body
        </article>
    </main>

    <PlayerBar />
    <Audio />
</div>

@code {
    private bool _isDarkMode;
    private ErrorBoundary? _errorBoundary;
    // private MudThemeProvider _mudThemeProvider;
    // private MudTheme _customTheme;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
       // _customTheme = CustomTheme.Theme;
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // switch (Settings.Environment.General.AppThemeInt)
            // {
            //     case 0:
            //         _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            //         break;
            //     case 1:
            //         _isDarkMode = false;
            //         break;
            //     case 2:
            //         _isDarkMode = true;
            //         break;
            //     default:
            //         break;
            // }
            // await InvokeAsync(StateHasChanged);
            // await NativeTheme.SetThemeAsync(_isDarkMode);
            // if (Settings.Environment.General.IsAutoCheckUpdate)
            // {
            //     await AutoUpgrade.DoAsync(true);
            // }
        }
    }

    private void ResetError(Exception ex)
    {
        _logger.LogError(ex, "Unprocessed abnormalities。");
        _errorBoundary?.Recover();
    }

  
}